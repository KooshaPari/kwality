# OpenLLMetry Configuration for LLM Validation Platform
# Enhanced OpenTelemetry configuration for LLM-specific monitoring

# Service Configuration
service:
  name: llm-validation-platform
  version: 1.0.0
  environment: ${NODE_ENV:-development}
  namespace: llm-validation

# OpenTelemetry Configuration
opentelemetry:
  # SDK Configuration
  sdk:
    disabled: false
    traces:
      exporter:
        otlp:
          endpoint: ${OTEL_EXPORTER_OTLP_ENDPOINT:-http://localhost:4317}
          headers:
            api-key: ${OTEL_API_KEY:-}
        console:
          enabled: ${OTEL_CONSOLE_ENABLED:-true}
    metrics:
      exporter:
        prometheus:
          endpoint: ${PROMETHEUS_ENDPOINT:-http://localhost:9090}
          port: ${PROMETHEUS_PORT:-9090}
        otlp:
          endpoint: ${OTEL_EXPORTER_OTLP_ENDPOINT:-http://localhost:4317}
      readers:
        - type: prometheus
          config:
            port: ${PROMETHEUS_PORT:-9090}
    logs:
      exporter:
        otlp:
          endpoint: ${OTEL_EXPORTER_OTLP_ENDPOINT:-http://localhost:4317}
        console:
          enabled: ${LOG_CONSOLE_ENABLED:-true}

  # Resource Configuration
  resource:
    attributes:
      service.name: llm-validation-platform
      service.version: 1.0.0
      service.namespace: llm-validation
      deployment.environment: ${NODE_ENV:-development}
      service.instance.id: ${HOSTNAME:-localhost}
      telemetry.sdk.name: opentelemetry
      telemetry.sdk.language: javascript
      telemetry.sdk.version: 1.0.0

# LLM-Specific Monitoring Configuration
llm_monitoring:
  # Semantic Quality Metrics
  semantic_metrics:
    enabled: true
    models:
      - name: claude-3-sonnet
        provider: anthropic
        metrics:
          - relevance_score
          - coherence_score
          - factual_accuracy
          - hallucination_detection
      - name: gpt-4
        provider: openai
        metrics:
          - relevance_score
          - coherence_score
          - factual_accuracy
          - hallucination_detection
    
    # Evaluation Criteria
    evaluation_criteria:
      relevance:
        weight: 0.3
        threshold: 0.7
      coherence:
        weight: 0.25
        threshold: 0.8
      factual_accuracy:
        weight: 0.35
        threshold: 0.85
      hallucination:
        weight: 0.1
        threshold: 0.1  # Lower is better

  # Syntactic Quality Metrics
  syntactic_metrics:
    enabled: true
    checks:
      - grammar_correctness
      - spelling_accuracy
      - punctuation_consistency
      - sentence_structure
    thresholds:
      grammar_score: 0.9
      spelling_score: 0.95
      punctuation_score: 0.9
      structure_score: 0.8

  # Safety and Ethics Metrics
  safety_metrics:
    enabled: true
    categories:
      - toxicity
      - bias_detection
      - harmful_content
      - privacy_leakage
      - ethical_compliance
    thresholds:
      toxicity_score: 0.1  # Lower is better
      bias_score: 0.2      # Lower is better
      harmful_content: 0.05 # Lower is better
      privacy_risk: 0.1    # Lower is better

  # Structural Quality Assessment
  structural_metrics:
    enabled: true
    assessments:
      - response_completeness
      - information_density
      - logical_flow
      - citation_accuracy
      - formatting_consistency
    weights:
      completeness: 0.3
      density: 0.2
      flow: 0.25
      citations: 0.15
      formatting: 0.1

  # Performance Metrics
  performance_metrics:
    enabled: true
    measures:
      - response_time
      - token_usage
      - cost_per_request
      - throughput
      - error_rate
    targets:
      max_response_time: 5000  # ms
      max_tokens_per_request: 4000
      max_cost_per_request: 0.10  # USD
      min_throughput: 10  # requests/second
      max_error_rate: 0.01  # 1%

# Instrumentation Configuration
instrumentation:
  # HTTP Instrumentation
  http:
    enabled: true
    capture_headers: true
    capture_body: true
    ignored_urls:
      - /health
      - /metrics
      - /favicon.ico

  # Database Instrumentation
  database:
    enabled: true
    capture_queries: true
    slow_query_threshold: 1000  # ms
    postgresql:
      enabled: true
      capture_sql: true
    redis:
      enabled: true
      capture_commands: true
    neo4j:
      enabled: true
      capture_cypher: true

  # LLM API Instrumentation
  llm_apis:
    enabled: true
    providers:
      anthropic:
        enabled: true
        capture_prompts: true
        capture_responses: true
        capture_token_usage: true
      openai:
        enabled: true
        capture_prompts: true
        capture_responses: true
        capture_token_usage: true
      local_models:
        enabled: true
        capture_prompts: true
        capture_responses: true

  # Validation Framework Instrumentation
  validation:
    enabled: true
    capture_test_results: true
    capture_validation_metrics: true
    capture_grading_details: true

# Sampling Configuration
sampling:
  # Trace Sampling
  traces:
    sampler: parentbased_traceidratio
    ratio: 0.1  # 10% sampling
    
  # Metrics Sampling  
  metrics:
    interval: 5000  # 5 seconds
    
  # Logs Sampling
  logs:
    level: info
    sample_rate: 1.0  # 100% for logs

# Batch Processing Configuration
batch_processing:
  traces:
    max_export_batch_size: 512
    export_timeout: 30000
    max_queue_size: 2048
    schedule_delay: 5000
  metrics:
    max_export_batch_size: 512
    export_timeout: 30000
    max_queue_size: 2048
    schedule_delay: 5000

# Custom Dimensions and Tags
custom_dimensions:
  user_id: ${USER_ID:-anonymous}
  session_id: ${SESSION_ID:-}
  request_id: ${REQUEST_ID:-}
  validation_type: ${VALIDATION_TYPE:-}
  model_provider: ${MODEL_PROVIDER:-}
  model_name: ${MODEL_NAME:-}
  environment: ${NODE_ENV:-development}
  version: ${APP_VERSION:-1.0.0}

# Error Handling Configuration
error_handling:
  suppress_instrumentation_errors: false
  log_instrumentation_errors: true
  fallback_to_console: true
  retry_attempts: 3
  retry_delay: 1000  # ms

# Security Configuration
security:
  # PII Scrubbing
  pii_scrubbing:
    enabled: true
    patterns:
      - email
      - phone
      - ssn
      - credit_card
      - api_key
    replacement: "[REDACTED]"
  
  # Sensitive Data Filtering
  sensitive_data:
    enabled: true
    fields:
      - password
      - token
      - secret
      - key
      - auth
    replacement: "[FILTERED]"

# Development and Debugging
development:
  debug_mode: ${DEBUG_MODE:-false}
  verbose_logging: ${VERBOSE_LOGGING:-false}
  export_console: ${EXPORT_CONSOLE:-true}
  trace_console: ${TRACE_CONSOLE:-false}

# Health Check Configuration
health_check:
  enabled: true
  endpoint: /health/monitoring
  interval: 30000  # 30 seconds
  timeout: 5000   # 5 seconds
  checks:
    - opentelemetry_status
    - prometheus_metrics
    - llm_api_connectivity
    - database_connectivity
